const Composer = require("telegraf/composer");
const Stage = require("telegraf/stage");
const session = require("telegraf/session");

const { escapeChar } = require("../utils");

const User = require("../models/User");

const mainMenu = require("../controllers/mainMenu");
const registration = require("../controllers/registration");
const sendTrack = require("../controllers/sendTrack");
const popularRate = require("../controllers/popularRate");
const topTracks = require("../controllers/topTracks");
const personalTop = require("../controllers/personalTop");

const stage = new Stage(
  [mainMenu, registration, sendTrack, popularRate, topTracks, personalTop],
  {
    // ttl: 10,
    // default: "main_menu",
  }
);

const privateRoute = new Composer();
privateRoute.use(session());
privateRoute.use(stage.middleware());

privateRoute.start(async (ctx) => {
  const { id, first_name, last_name } = ctx.from;
  const userName = [first_name, last_name].filter((v) => v).join(" ");

  await ctx.replyWithMarkdown(
    `üòé –ü—Ä–∏–≤–µ—Ç, ${escapeChar(
      userName
    )}! \n\n–ó–¥–µ—Å—å —Ç—ã –±—É–¥–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å *–ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ç–ª–∞*, *–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ —Ç—Ä–µ–∫–∏* –∏ –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –∏—Ö –ø–æ–∑–∏—Ü–∏–π –≤ *–¢–û–ü-10*. \n\n–ö—Ä–æ–º–µ –≤—Å–µ–≥–æ –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ *–∫–∞–∫ —É—á–∞—Å—Ç–Ω–∏–∫* –±–∞—Ç–ª–∞ –∑–¥–µ—Å—å —Ç—ã –±—É–¥–µ—à—å *—Å–¥–∞–≤–∞—Ç—å —Ç—Ä–µ–∫–∏* –∏ –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ *–ª–∏—á–Ω—ã–º —Ç–æ–ø–æ–º* —Å–≤–æ–∏—Ö —Ç—Ä–µ–∫–æ–≤.`
  );

  let userDB = await User.findOne({ telegramId: id });

  if (!userDB) {
    userDB = await new User({
      telegramId: id,
      firstName: first_name,
      lastName: last_name,
      created: new Date(),
      blocked: false,
    });

    await userDB.save();
  }

  if (userDB.rapName) {
    return ctx.scene.enter("main_menu");
  }

  return ctx.scene.enter("registration");
});

privateRoute.use(async (ctx) => {
  await ctx.replyWithMarkdown(
    `‚ùóÔ∏è –ë–æ—Ç –ø–æ–ª—É—á–∏–ª –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. \n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É.`
  );
});

module.exports = privateRoute;
